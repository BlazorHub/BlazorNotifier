@using System.Collections.Specialized
@using BlazorNotifier.Classes
@using System.Collections.ObjectModel
@inject BlazorNotifierClientService Notifi
@if (Notifi.Notifications.Count > 0 || Notifi.ProgressMessages.Count > 0)
{
    <p>@Notifi.Notifications.Count</p>
    <div class="notification-area">
        @foreach (var message in Notifi.ProgressMessages)
        {
            <BlazorNotifier.Components.NotifierProgress Id="@message.Id" Title="@message.Title" Message="@message.Message" OnCloseClick="@Notifi.CloseProgress" />

        }
        @foreach (var message in Notifi.Notifications)
        {
            <BlazorNotifier.Components.NotifierMessage Id="@message.Id" Title="@message.Title" Type="@message.Type" TimeOut="@message.TimeOut" OnClose="@Notifi.CloseMessage"/>
        }
    </div>

}
@code
{
    protected override void OnInitialized()
    {
        Notifi.OnProgressChange += StateHasChanged;
        Notifi.OnChange += StateHasChanged;
        Notifi.Notifications.CollectionChanged += (Sender, Args) => StateHasChanged();
    }


}